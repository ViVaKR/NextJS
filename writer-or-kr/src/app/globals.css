@layer theme, base, components, utilities;
@import 'tailwindcss';
@import './theme.css';

:root {
  --background: #dcf7f2;
  --foreground: #171717;
}

@theme inline {
  --font-sans: var(--font-inter);
  --font-roboto: var(--font-roboto);
  --font-mono: var(--font-fira);
  --font-ibm-kr: var(--font-ibm-plex-kr);
  --font-cute: var(--font-cute);

  --font-display: var(--font-oswald), sans-serif;
  --font-display--font-feature-settings: 'cv02', 'cv03', 'cv04', 'cv11';
  --font-display--font-variation-settings: 'opsz' 32;
}

/* preflight 재정의 */
@layer base {
  /* For Firefox */
  * {
    /* 스크롤바 너비 숨김 */
    scrollbar-width: none;
  }

  /* For WebKit (Chrome & Safari) */
  ::-webkit-scrollbar {
    /* 스크롤바 숨김 */
    display: none;
  }
}

@layer utilities {
  .bg-robot {
    background-image: url('/images/robot-man.webp');
    background-repeat: no-repeat;
    background-size: 100% auto;
  }

  .bg-viv {
    background-image: url('/images/viv.webp');
    background-repeat: no-repeat;
    background-size: 100% auto;
  }

  .animate-spin-slow {
    animation: spin 3s linear infinite;
  }
}

/* 구성 요소 클래스 추가 부분 */
@layer components {
  .btn-primary {
    @apply bg-blue-600 font-bold py-2 px-4 text-white rounded-md;
  }

  .btn-rose {
    @apply bg-rose-500 font-bold py-2 px-4 text-white rounded-md;
  }

  /* div container */
  .box-sm {
    @apply w-full flex justify-around items-center rounded-lg;
  }
  .box-sm-col {
    @apply w-full flex flex-col gap-2 rounded-lg;
  }

  .flex-viv-default {
    @apply flex h-32 flex-row;
  }

  .hr-viv {
    @apply text-slate-300 my-2;
  }

  .subtitle-xl {
    @apply text-xl text-slate-400 font-semibold;
  }

  .flex-row-center {
    @apply flex justify-center items-center;
  }

  .flex-col-center {
    @apply flex flex-col justify-center items-center;
  }

  .card {
    background-color: var(--color-white);
    border-radius: var(--radius-lg);
    padding: --spacing(6);
    box-shadow: var(--shadown-xl);
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-inter), var(--font-ibm-plex-kr), sans-serif;
  line-height: 1.5rem;
}

div.writer-container {
  width: 100%;
  min-height: 100vh;
  display: grid;
  grid-template:
    'header' 80px
    'main' 1fr
    'footer' 150px
    / 1fr;
}

header {
  grid-area: header;
  overflow-x: auto;
}

main {
  grid-area: main;
  overflow-x: auto;
}

footer {
  grid-area: footer;
  overflow: auto;
}

/* @theme */
/*
  - 테마변수는 새로운 유틸리티 클래스를 생성하도록 지시하기도 함.
  - 테마변수는 최상위 레벨에서 정의 되어야 함.

*/

/* :root */
/*
  유틸리티 클래스에 연결되지 않아야 하는 변수로서 일반 CSS 변수를 정의하는 것

*/

/*
  --> class="bg-mint-500" <-- @theme { --color-mini-500; oklch(0.72 0.11 178); }
  --> <div style="background-color: var(--color-mint-500)"> ... </div>
*/

/* Responsive Design */
/*
  `sm` : 640px, 40rem
  `md` : 768px, 48rem
  `lg` : 1024px, 64rem
  `xl` : 1280px, 80rem
  `2xl` : 1536px, 96rem

  `max-sm`
  `max-md`
  `max-lg`
  `max-xl`
  `max-2xl`

*/
/* 가상클래스 */
/*
  ! 가상 !
  * Classes
  :hover
  :focus
  :focus-within
  :focus-visible
  :active
  :visited
  :target
  :first-child
  :last-child
  :only-child
  :nth-child(odd)
  :nth-child(even)
  :nth-child()
  :nth-last-child()
  :nth-of-type()
  :nth-last-of-type()
  :first-of-type
  :last-of-type
  :only-of-type
  :required
  :empty
  :disabled
  :enabled
  :checked
  :indeterminate
  :default
  :optional
  :required
  :valid
  :invalid
  :user-valid
  :in-range
  :out-of-range
  :placeholder-shown
  :details-content
  :autofill
  :read-only

  *elements
  ::before
  ::after
  ::placeholder
  ::selection
  * attribute selectors
  [dir='rtl']
  [open]

  * child selector
  &
  >
  *

  & *

*/

/*
  ! preflight !

  ? 여백제거 ?
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    margin: 0;
    padding: 0;
  }

  ? 테두리 스타일 재설 정 ?
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
  }

  ?  ?
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  ?  ?
  ol,
  ul,
  menu {
    list-style: none;
  }

  ? 이미지는 블록 수준 ?
  img,
  svg,
  video,
  audio,
  embed,
  object {
    display: block;
    vertical-align: middel;
  }

  img,
  video {
    max-width: 100%;
    height: auto;
  }

*/
