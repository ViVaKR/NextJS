import type { Metadata } from 'next';
import { Poppins, Noto_Sans_KR } from 'next/font/google';
import './globals.css';
import NavMenu from '@/menus/NavMenu';
import { AuthProvider } from '@/lib/AuthContext';
import { SnackbarProvider } from '@/lib/SnackbarContext';
import VivBottomNav from '@/components/VivBottom';
import { Suspense } from 'react';

const poppins = Poppins({
  variable: '--font-poppins',
  subsets: ['latin'],
  weight: ['400'],
  display: 'swap',
  preload: true,
});

const noto = Noto_Sans_KR({
  variable: '--font-noto',
  subsets: ['latin'],
  display: 'swap',
  preload: true,
});

export const metadata: Metadata = {
  metadataBase: new URL('https://localhost:41086'),
  title: 'I AM KIM BUM JUN',
  description: 'Generated by create BJ - 김범준의 멋ㅈ니 웹사이트',
  keywords: '김범준, 웹 개발, Next.js',
  openGraph: {
    title: 'I AM KIM BUM JUN',
    description: '김범준의 개인 웹사이트에 오신 것을 환영합니다!',
    url: '/', // 상대 경로로 설정 가능
    images: ['/images/robot-man.webp'], // 이미지 파일 경로
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link rel="dns-prefetch" href="https://fonts.googleapis.com" />
      </head>
      <body
        className={`${noto.variable}
        ${poppins.variable}
        antialiased`}>
        <AuthProvider>
          <SnackbarProvider>
            <Suspense fallback={<div className="min-h-screen flex items-center justify-center">Loading...</div>}>
              <nav aria-label='Main Navigation'>
                <NavMenu />
              </nav>

              <main
                className='min-h-[calc(100vh_-_72px_-_248px)]'
              >
                {children}
              </main>

              <footer
                className='bg-slate-200 xs:h-auto md:h-[248px]' // 모바일
              >
                <VivBottomNav />
              </footer>
            </Suspense>
          </SnackbarProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
