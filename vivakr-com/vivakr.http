@url = https://localhost:41086
@api = https://localhost:55588
@vivakrUrl = https://api.vivakr.com

@bm = https://bm.vivabm.com


###
GET {{vivakrUrl}}/api/code/user/99034af5-b584-4982-91ae-ff7ce615914e HTTP/1.1

###
GET {{vivakrUrl}}/api/locationinfo HTTP/1.1

###
GET {{api}}/api/test HTTP/1.1

###
POST {{api}}/api/test HTTP/1.1

###
GET {{bm}}/api/quiz HTTP/1.1

###
GET {{url}}/api/posts HTTP/1.1

###

POST {{url}}/api/demo HTTP/1/1


###

GET {{url}}/api/search?query=hello
# curl http://localhost:3000/api/search --url-query query=hi -w "\n"
# echo '-w "\n"' >> ~/.curlrc
# curl http://localhost:3000/api/search --url-query query=hi -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"


###
GET {{vivakrUrl}}/api/subscribe/list?limit=2 HTTP/1.1

###
GET {{api}}/api/account/total HTTP/1.1

###
GET {{api}}/api/code/total HTTP/1.1


###
GET {{api}}/api/filemanager/total HTTP/1.1


###

POST {{vivakrUrl}}/api/subscribe/new HTTP/1.1
content-type: application/json

{
    "email": "kimburmjun@gmail.com"
}

###

POST {{api}}/api/account/check-name HTTP/1.1
content-type: application/json

{
    "name": "활화산----"
}


###
POST {{vivakrUrl}}/api/subscribe/remove-subscribe HTTP/1.1
content-type: application/json

{
    "email": "hello.viva.bm@gmail.com"
}

###

DELETE  {{vivakrUrl}}/api/subscribe/reply-remove-subscribe?email=hello.viva.bm@gmail.com HTTP/1.1

###
# /api/subscribe/replay-remove-subscribe
# reply-remove-subscribe
# api/subscribe/remove-subscription
# api/subscribe/reply-remove-subscribe


###

POST {{vivakrUrl}}/api/account/refresh-token HTTP/1.1
content-type: application/json

{
    "token" : "토큰",
    "refreshToken": "갱신토큰",
    "email": "bm@live.co.kr"
}

Hi everyone fine thanks and you?

에 해당하는 클립보드를 가리킬 수 있도
일반적인 운영체제에서 복사된 데이터는 '클립보드'라는 이름의 저장공간에 저장된다. 이는 Vim 의 레지스터와는 별도의 공간이기 때문에 Vim 의 일반적인 p 명령으로는 운영체제에서 복사한 내용을 붙여넣을 수 없으며, 일반적인 y 명령으로는 운영체제의 클립보드로 복사할 수도 없다.
